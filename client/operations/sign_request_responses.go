// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SignRequestReader is a Reader for the SignRequest structure.
type SignRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SignRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSignRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSignRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSignRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /requests/{requestId}] signRequest", response, response.Code())
	}
}

// NewSignRequestOK creates a SignRequestOK with default headers values
func NewSignRequestOK() *SignRequestOK {
	return &SignRequestOK{}
}

/*
SignRequestOK describes a response with status code 200, with default header values.

Request processed
*/
type SignRequestOK struct {
}

// IsSuccess returns true when this sign request o k response has a 2xx status code
func (o *SignRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sign request o k response has a 3xx status code
func (o *SignRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sign request o k response has a 4xx status code
func (o *SignRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sign request o k response has a 5xx status code
func (o *SignRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sign request o k response a status code equal to that given
func (o *SignRequestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sign request o k response
func (o *SignRequestOK) Code() int {
	return 200
}

func (o *SignRequestOK) Error() string {
	return fmt.Sprintf("[GET /requests/{requestId}][%d] signRequestOK ", 200)
}

func (o *SignRequestOK) String() string {
	return fmt.Sprintf("[GET /requests/{requestId}][%d] signRequestOK ", 200)
}

func (o *SignRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSignRequestBadRequest creates a SignRequestBadRequest with default headers values
func NewSignRequestBadRequest() *SignRequestBadRequest {
	return &SignRequestBadRequest{}
}

/*
SignRequestBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type SignRequestBadRequest struct {
}

// IsSuccess returns true when this sign request bad request response has a 2xx status code
func (o *SignRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sign request bad request response has a 3xx status code
func (o *SignRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sign request bad request response has a 4xx status code
func (o *SignRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this sign request bad request response has a 5xx status code
func (o *SignRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this sign request bad request response a status code equal to that given
func (o *SignRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the sign request bad request response
func (o *SignRequestBadRequest) Code() int {
	return 400
}

func (o *SignRequestBadRequest) Error() string {
	return fmt.Sprintf("[GET /requests/{requestId}][%d] signRequestBadRequest ", 400)
}

func (o *SignRequestBadRequest) String() string {
	return fmt.Sprintf("[GET /requests/{requestId}][%d] signRequestBadRequest ", 400)
}

func (o *SignRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSignRequestInternalServerError creates a SignRequestInternalServerError with default headers values
func NewSignRequestInternalServerError() *SignRequestInternalServerError {
	return &SignRequestInternalServerError{}
}

/*
SignRequestInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SignRequestInternalServerError struct {
}

// IsSuccess returns true when this sign request internal server error response has a 2xx status code
func (o *SignRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sign request internal server error response has a 3xx status code
func (o *SignRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sign request internal server error response has a 4xx status code
func (o *SignRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this sign request internal server error response has a 5xx status code
func (o *SignRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this sign request internal server error response a status code equal to that given
func (o *SignRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the sign request internal server error response
func (o *SignRequestInternalServerError) Code() int {
	return 500
}

func (o *SignRequestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /requests/{requestId}][%d] signRequestInternalServerError ", 500)
}

func (o *SignRequestInternalServerError) String() string {
	return fmt.Sprintf("[GET /requests/{requestId}][%d] signRequestInternalServerError ", 500)
}

func (o *SignRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
