// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fastchain/mukade/models"
)

// GetCertificateReader is a Reader for the GetCertificate structure.
type GetCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCertificateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCertificateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /certificates/{certificateId}] getCertificate", response, response.Code())
	}
}

// NewGetCertificateOK creates a GetCertificateOK with default headers values
func NewGetCertificateOK() *GetCertificateOK {
	return &GetCertificateOK{}
}

/*
GetCertificateOK describes a response with status code 200, with default header values.

Successful retrieval of certificate data
*/
type GetCertificateOK struct {
	Payload *models.Certificate
}

// IsSuccess returns true when this get certificate o k response has a 2xx status code
func (o *GetCertificateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get certificate o k response has a 3xx status code
func (o *GetCertificateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificate o k response has a 4xx status code
func (o *GetCertificateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificate o k response has a 5xx status code
func (o *GetCertificateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificate o k response a status code equal to that given
func (o *GetCertificateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get certificate o k response
func (o *GetCertificateOK) Code() int {
	return 200
}

func (o *GetCertificateOK) Error() string {
	return fmt.Sprintf("[GET /certificates/{certificateId}][%d] getCertificateOK  %+v", 200, o.Payload)
}

func (o *GetCertificateOK) String() string {
	return fmt.Sprintf("[GET /certificates/{certificateId}][%d] getCertificateOK  %+v", 200, o.Payload)
}

func (o *GetCertificateOK) GetPayload() *models.Certificate {
	return o.Payload
}

func (o *GetCertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Certificate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificateNotFound creates a GetCertificateNotFound with default headers values
func NewGetCertificateNotFound() *GetCertificateNotFound {
	return &GetCertificateNotFound{}
}

/*
GetCertificateNotFound describes a response with status code 404, with default header values.

Certificate not found
*/
type GetCertificateNotFound struct {
}

// IsSuccess returns true when this get certificate not found response has a 2xx status code
func (o *GetCertificateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificate not found response has a 3xx status code
func (o *GetCertificateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificate not found response has a 4xx status code
func (o *GetCertificateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get certificate not found response has a 5xx status code
func (o *GetCertificateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificate not found response a status code equal to that given
func (o *GetCertificateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get certificate not found response
func (o *GetCertificateNotFound) Code() int {
	return 404
}

func (o *GetCertificateNotFound) Error() string {
	return fmt.Sprintf("[GET /certificates/{certificateId}][%d] getCertificateNotFound ", 404)
}

func (o *GetCertificateNotFound) String() string {
	return fmt.Sprintf("[GET /certificates/{certificateId}][%d] getCertificateNotFound ", 404)
}

func (o *GetCertificateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCertificateInternalServerError creates a GetCertificateInternalServerError with default headers values
func NewGetCertificateInternalServerError() *GetCertificateInternalServerError {
	return &GetCertificateInternalServerError{}
}

/*
GetCertificateInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCertificateInternalServerError struct {
}

// IsSuccess returns true when this get certificate internal server error response has a 2xx status code
func (o *GetCertificateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificate internal server error response has a 3xx status code
func (o *GetCertificateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificate internal server error response has a 4xx status code
func (o *GetCertificateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificate internal server error response has a 5xx status code
func (o *GetCertificateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get certificate internal server error response a status code equal to that given
func (o *GetCertificateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get certificate internal server error response
func (o *GetCertificateInternalServerError) Code() int {
	return 500
}

func (o *GetCertificateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /certificates/{certificateId}][%d] getCertificateInternalServerError ", 500)
}

func (o *GetCertificateInternalServerError) String() string {
	return fmt.Sprintf("[GET /certificates/{certificateId}][%d] getCertificateInternalServerError ", 500)
}

func (o *GetCertificateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
