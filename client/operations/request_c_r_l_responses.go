// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RequestCRLReader is a Reader for the RequestCRL structure.
type RequestCRLReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *RequestCRLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRequestCRLOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRequestCRLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRequestCRLInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /crl.crl] requestCRL", response, response.Code())
	}
}

// NewRequestCRLOK creates a RequestCRLOK with default headers values
func NewRequestCRLOK(writer io.Writer) *RequestCRLOK {
	return &RequestCRLOK{

		Payload: writer,
	}
}

/*
RequestCRLOK describes a response with status code 200, with default header values.

Request processed
*/
type RequestCRLOK struct {
	Payload io.Writer
}

// IsSuccess returns true when this request c r l o k response has a 2xx status code
func (o *RequestCRLOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this request c r l o k response has a 3xx status code
func (o *RequestCRLOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request c r l o k response has a 4xx status code
func (o *RequestCRLOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this request c r l o k response has a 5xx status code
func (o *RequestCRLOK) IsServerError() bool {
	return false
}

// IsCode returns true when this request c r l o k response a status code equal to that given
func (o *RequestCRLOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the request c r l o k response
func (o *RequestCRLOK) Code() int {
	return 200
}

func (o *RequestCRLOK) Error() string {
	return fmt.Sprintf("[GET /crl.crl][%d] requestCRLOK  %+v", 200, o.Payload)
}

func (o *RequestCRLOK) String() string {
	return fmt.Sprintf("[GET /crl.crl][%d] requestCRLOK  %+v", 200, o.Payload)
}

func (o *RequestCRLOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *RequestCRLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestCRLBadRequest creates a RequestCRLBadRequest with default headers values
func NewRequestCRLBadRequest() *RequestCRLBadRequest {
	return &RequestCRLBadRequest{}
}

/*
RequestCRLBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type RequestCRLBadRequest struct {
}

// IsSuccess returns true when this request c r l bad request response has a 2xx status code
func (o *RequestCRLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request c r l bad request response has a 3xx status code
func (o *RequestCRLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request c r l bad request response has a 4xx status code
func (o *RequestCRLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this request c r l bad request response has a 5xx status code
func (o *RequestCRLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this request c r l bad request response a status code equal to that given
func (o *RequestCRLBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the request c r l bad request response
func (o *RequestCRLBadRequest) Code() int {
	return 400
}

func (o *RequestCRLBadRequest) Error() string {
	return fmt.Sprintf("[GET /crl.crl][%d] requestCRLBadRequest ", 400)
}

func (o *RequestCRLBadRequest) String() string {
	return fmt.Sprintf("[GET /crl.crl][%d] requestCRLBadRequest ", 400)
}

func (o *RequestCRLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestCRLInternalServerError creates a RequestCRLInternalServerError with default headers values
func NewRequestCRLInternalServerError() *RequestCRLInternalServerError {
	return &RequestCRLInternalServerError{}
}

/*
RequestCRLInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type RequestCRLInternalServerError struct {
}

// IsSuccess returns true when this request c r l internal server error response has a 2xx status code
func (o *RequestCRLInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request c r l internal server error response has a 3xx status code
func (o *RequestCRLInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request c r l internal server error response has a 4xx status code
func (o *RequestCRLInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this request c r l internal server error response has a 5xx status code
func (o *RequestCRLInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this request c r l internal server error response a status code equal to that given
func (o *RequestCRLInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the request c r l internal server error response
func (o *RequestCRLInternalServerError) Code() int {
	return 500
}

func (o *RequestCRLInternalServerError) Error() string {
	return fmt.Sprintf("[GET /crl.crl][%d] requestCRLInternalServerError ", 500)
}

func (o *RequestCRLInternalServerError) String() string {
	return fmt.Sprintf("[GET /crl.crl][%d] requestCRLInternalServerError ", 500)
}

func (o *RequestCRLInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
